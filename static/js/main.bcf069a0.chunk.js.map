{"version":3,"sources":["components/Contactslist/Contactslist.js","components/Form/Form.js","App.js","index.js"],"names":["ContactsList","contacts","onDeleteContacts","className","map","id","name","number","type","onClick","Form","state","handleChange","evt","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","reset","this","onChange","pattern","title","required","Component","App","filter","addContacts","uuidv4","prevState","deleteContact","contactId","contact","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEe,SAASA,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBAC/C,OACE,oBAAIC,UAAU,WAAd,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,IACUC,EACR,wBACEC,KAAK,SACLL,UAAU,gBACVM,QAAS,kBAAMP,EAAiBG,IAHlC,0DAFOA,Q,WCJIK,E,4MACnBC,MAAQ,CACNL,KAAM,GACNC,OAAQ,I,EAGVK,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAIE,cAAcT,KAAOO,EAAIE,cAAcC,S,EAIhDC,aAAe,SAAAJ,GACbA,EAAIK,iBACJC,QAAQC,IAAI,EAAKT,OAEjB,EAAKU,MAAMC,SAAS,EAAKX,MAAML,KAAM,EAAKK,MAAMJ,QAChD,EAAKO,SAAS,CAAER,KAAM,GAAIC,OAAQ,KAClC,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKT,SAAS,CACZR,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,MAAyBiB,KAAKb,MAAtBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMe,SAAUE,KAAKP,aAArB,UACE,2CACA,yCAEE,uBACET,KAAK,OACLQ,MAAOV,EACPA,KAAK,OACLmB,SAAUD,KAAKZ,aACfc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,2CAEE,uBACEpB,KAAK,MACLF,KAAK,SACLU,MAAOT,EACPkB,SAAUD,KAAKZ,aACfc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQpB,KAAK,SAAb,gC,GA3D0BqB,aCK5BC,E,4MAKJnB,MAAQ,CACNV,SAAU,GACV8B,OAAQ,I,EAGVC,YAAc,SAAC1B,EAAMC,GACnB,IAAMS,EAAQ,CACZX,GAAI4B,cACJ3B,OACAC,UAEF,EAAKO,UAAS,SAAAoB,GAAS,MAAK,CAC1BjC,SAAS,CAAEe,GAAH,mBAAakB,EAAUjC,gB,EAInCkC,cAAgB,SAAAC,GACd,EAAKtB,UAAS,SAAAoB,GAAS,MAAK,CAC1BjC,SAAUiC,EAAUjC,SAAS8B,QAAO,SAAAM,GAAO,OAAIA,EAAQhC,KAAO+B,U,4CAIlE,WACE,OACE,qCACE,cAAC,EAAD,CAAMd,SAAUE,KAAKQ,cAErB,0CACA,cAAChC,EAAD,CACEC,SAAUuB,KAAKb,MAAMV,SACrBC,iBAAkBsB,KAAKW,uB,GAnCfN,aAAZC,EACGQ,aAAe,GAyCTR,QC5CfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bcf069a0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = evt => {\n    this.setState({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(this.state);\n\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2>Phonebook</h2>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsList from './components/Contactslist/Contactslist';\n// import initialContacts from './contacts.json';\nimport Form from './components/Form/Form';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContacts = (name, number) => {\n    const value = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(prevState => ({\n      contacts: [value, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.addContacts} />\n\n        <h2>Contacts</h2>\n        <ContactsList\n          contacts={this.state.contacts}\n          onDeleteContacts={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}